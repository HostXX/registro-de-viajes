{"version":3,"sources":["API.js","compoments/Nav.jsx","compoments/AddLogForm.jsx","compoments/MapComponent.jsx","compoments/ProtectedRoute.jsx","compoments/AccountPage.jsx","compoments/LoginPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["API_URL_POST","process","API_URL_DELETE","listLogs","a","fetch","then","res","json","createLog","entry","apikey","method","body","JSON","stringify","headers","response","jsonObject","ok","Error","message","entryId","console","log","Nav","isLogged","setIsLogged","className","to","onClick","AddLogForm","coordinates","onClose","useState","loading","setLoading","error","setError","useForm","register","handleSubmit","onSubmit","data","latitude","longitude","setTimeout","style","color","htmlFor","name","required","ref","type","rows","disabled","MapComponent","viewport","showAddMarkerPopUp","setViewport","logEntries","addEntryLocation","setAddEntryLocation","getEntries","showPopUp","setShowPopUp","togleMap","setToggleMap","width","height","onDblClick","onViewportChange","nextViewport","mapboxApiAccessToken","mapStyle","map","key","_id","offsetLeft","offsetTop","viewBox","cursor","fill","stroke","transform","d","position","title","closeButton","closeOnClick","sortByDepth","anchor","comment","Date","visitedAt","toLocaleDateString","image","src","alt","onChange","checked","id","ProtectedRoute","Component","component","path","rest","render","props","EntryDetail","setLogEntries","setEntryToShow","setFullScreenImg","setShowFullScreenImg","window","confirm","deleteLog","filter","item","catch","err","AccountPage","entryToShow","ShowfullScreenImg","fullScreenImg","handleShowEntryInfo","useCallback","entryInfo","entries","LoginPage","pathname","App","zoom","useEffect","logs","exact","e","lngLat","prueva","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a736435c.chunk.js","sourcesContent":["const API_URL_GET_ALL = process.env.REACT_APP_API_URL_GET_ALL\nconst API_URL_POST =process.env.REACT_APP_API_URL_POST\nconst API_URL_DELETE =process.env.REACT_APP_API_URL_DELETE\nconst API_URL_PUT  = process.env.REACT_APP_API_URL_PUT\nexport async function listLogs () {\n  return await fetch(`${API_URL_GET_ALL}`).then(res => res.json())\n}\n\nexport async function createLog (entry) {\n  const apikey = entry.apikey\n  delete entry.apikey\n  const response = await fetch(API_URL_POST, {\n    method: 'POST',\n    body: JSON.stringify(entry),\n    headers: {\n      'Content-Type': 'application/json',\n      'API_KEY' : apikey\n    }\n  })\n\n  const jsonObject = await response.json()\n  if (response.ok) {\n    // console.log(response.ok);\n    return response\n   \n  }\n  const error = new Error(jsonObject.message)\n  // console.log(error);\n  throw error\n}\n\n\n\n\nexport async function deleteLog (entryId) {\n  try {\n    const response = await fetch(API_URL_DELETE, {\n      method: 'DELETE',\n      body: JSON.stringify({\n        entryId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    return response\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n// modify in construccion\n\nexport async function updateLog ({\n  entryId,\n  title,\n  comment,\n  description,\n  image,\n  vicitedAt\n}) {\n  try {\n    const response = await fetch(API_URL_PUT, {\n      method: 'PUT',\n      body: JSON.stringify({\n        entryId,\n        title,\n        comment,\n        description,\n        image,\n        vicitedAt\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    return response\n  } catch (error) {\n    console.log(error)\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Nav = ({ isLogged, setIsLogged }) => {\n  return (\n    <div>\n      <nav className={'navigation'}>\n        <ul>\n          <li>\n            <Link to={'/'}>Locations</Link>\n          </li>\n          <li>\n            <Link to={`/account/`}>Account</Link>\n          </li>\n          <li>\n            {isLogged ? (\n              <Link to={'/'} onClick={() => setIsLogged(false)}>\n                {' '}\n                Log out{' '}\n              </Link>\n            ) : (\n              <Link to={'/login'}> Log in </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nexport default Nav\n","import React, { useState } from 'react'\nimport { useForm } from \"react-hook-form\"\nimport { createLog } from '../API'\n\nconst AddLogForm = ({ coordinates, onClose }) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('')\n    const { register, handleSubmit } = useForm()\n\n\n    const onSubmit = async (data) => {\n        data.latitude = coordinates.latitude;\n        data.longitude = coordinates.longitude;\n        try {\n            setLoading(true);\n            const created = await createLog(data)\n            // console.log(created);\n            setError('Added correctly');\n            setTimeout(() => {\n                setError('');\n                onClose()\n            }, 1000);\n\n           \n        } catch (error) {\n            console.error(error);\n            setError(error.message);\n            setTimeout(() => {\n                setError(null);\n            }, 2000);\n\n            setLoading(false);\n        }\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"entry-form\">\n                {error ? <h3 className=\"error\" style={{color:'#ff0000'}} >{error}</h3> : null}\n                <label htmlFor=\"apikey\">Apikey</label>\n                <input name=\"apikey\" required ref={register} type='password' />\n                <br/>\n                <label htmlFor=\"title\">Title</label>\n                <input name=\"title\" required ref={register} />\n                <label htmlFor=\"comment\">Comment</label>\n                <textarea name=\"comment\" rows={2} ref={register}></textarea>\n                <label htmlFor=\"description\">Description</label>\n                <textarea name=\"description\" rows={2} ref={register}></textarea>\n                <label htmlFor=\"image\">Image</label>\n                <input name=\"image\" ref={register} />\n                <label htmlFor=\"visitedAt\">Visit Date</label>\n                <input name=\"visitedAt\" type=\"date\" required ref={register} />\n                <button disabled={loading}>{loading ? 'Loading...' : 'Create Entry'}</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddLogForm","import React,{useState} from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\nimport AddLogForm from './AddLogForm'\n\nconst MapComponent = ({viewport,showAddMarkerPopUp,setViewport,logEntries,addEntryLocation,setAddEntryLocation, getEntries }) => {\n    const [showPopUp, setShowPopUp] = useState({})\n    const [togleMap, setToggleMap] = useState(false)\n\n    return (\n      \n            <div\n        style={{ color: 'red', width: '100vw', height: '80vh ' }}\n        className={'map-wrapper'}\n      >\n        <ReactMapGL\n          {...viewport}\n          onDblClick={showAddMarkerPopUp}\n          onViewportChange={nextViewport => setViewport(nextViewport)}\n          mapboxApiAccessToken={process.env.REACT_APP_TOKEN}\n          mapStyle={togleMap ? `mapbox://styles/mapbox/streets-v11` : `mapbox://styles/mapbox/dark-v10`}\n        >\n\n\n          {logEntries.map(entry => {\n            let size = 15\n            return (\n              <div key={entry._id}>\n                <Marker\n\n                  className='marker'\n                  key={entry._id}\n                  longitude={entry.longitude}\n                  latitude={entry.latitude}\n                  offsetLeft={-15}\n                  offsetTop={-7}\n                // captureDrag={false}\n                // captureDoubleClick={false}\n\n                > <div onClick={() => {\n\n                  if (showPopUp[entry._id] === true) {\n                    return\n                  }\n                  setShowPopUp({\n                    ...showPopUp,\n                    [entry._id]: true,\n                  })\n                }}> <svg\n\n                  height={size}\n                  viewBox='0 0 24 24'\n                  style={{\n                    cursor: 'pointer',\n                    fill: '#d00',\n                    stroke: 'none',\n                    transform: `translate(50%,-100%)`\n                  }}\n                >\n                      <path\n                        d={`M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n                      c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n                      C20.1,15.8,20.2,15.8,20.2,15.7z`}\n                      />\n                    </svg>\n                    </div>\n\n                  <div style={{\n                    color: \"#ff3333\",\n                    position: \"absolute\",\n                    cursor: 'pointer',\n                    transform: `translate(${-size / 2}px,${-size}px)`\n                  }}>{entry.title}</div>\n\n                </Marker>\n                {\n                  showPopUp[entry._id] ? <Popup\n                    latitude={entry.latitude}\n                    longitude={entry.longitude}\n                    closeButton={true}\n                    closeOnClick={false}\n                    sortByDepth={true}\n                    onClose={() => setShowPopUp({ ...showPopUp, [entry._id]: false })}\n                    anchor=\"top\" >\n                    <div className={'pop-up'}>\n                      <h3>{entry.title}</h3 >\n                      <p>{entry.comment}</p>\n                      <small> {\"visited: \"}{new Date(entry.visitedAt).toLocaleDateString()}</small>\n\n                  { entry.image && <img width='200px' height='200px' src={entry.image} alt={entry.title} /> }\n                    </div>\n                  </Popup> : null\n                }\n              </div>\n            )\n\n\n          })\n\n          }\n\n          {\n            addEntryLocation ? <>\n              <Marker\n                className='marker'\n                longitude={addEntryLocation.longitude}\n                latitude={addEntryLocation.latitude}\n                offsetLeft={-20}\n                offsetTop={-10}\n              // captureDrag={false}\n              // captureDoubleClick={false}\n\n              > <svg\n\n                height={20}\n                viewBox='0 0 24 24'\n                style={{\n                  cursor: 'pointer',\n                  fill: '#ff3',\n                  stroke: 'none',\n                  transform: `translate(50%,-100%)`\n                }}\n\n              >\n                  <path\n                    d={`M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n    c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n    C20.1,15.8,20.2,15.8,20.2,15.7z`}\n                  />\n                </svg>\n              </Marker>\n              <Popup\n                latitude={addEntryLocation.latitude}\n                longitude={addEntryLocation.longitude}\n                closeButton={true}\n                closeOnClick={false}\n                sortByDepth={true}\n                onClose={() => setAddEntryLocation(null)}\n                anchor=\"top\" >\n                <div className={'pop-up'}>\n                  <h3>Add this new location to your log</h3>\n                  <AddLogForm coordinates={addEntryLocation} onClose={() => {\n                    setAddEntryLocation(null);\n                    getEntries();\n                  }} />\n                </div>\n              </Popup></> : null\n          }\n\n        </ReactMapGL>\n        <label htmlFor=\"toggle-map\">{`Change to: ${togleMap ? 'Dark' : 'Light'}`}</label> <input onChange={() => setToggleMap(!togleMap)} checked={togleMap} type=\"checkbox\" name=\"toggle-map\" id=\"toggle-map\" />\n      </div>\n       \n    );\n}\n\nexport default MapComponent;\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst ProtectedRoute = ({\n  component: Component,\n  isLogged,\n  path,\n  ...rest\n}) => {\n  return (\n    <div>\n      <Route\n        path={path}\n        render={props =>\n          isLogged ? <Component {...rest} {...props} isLogged={isLogged} /> : <Redirect to={'/login'} />\n        }\n      />\n    </div>\n  )\n}\n\nexport default ProtectedRoute\n","import React, { useState, useCallback } from 'react'\nimport { deleteLog } from '../API'\n\nconst AccountPage = ({ logEntries, setLogEntries }) => {\n  const [entryToShow, setEntryToShow] = useState(null)\n  const [ShowfullScreenImg, setShowFullScreenImg] = useState(false)\n  const [fullScreenImg, setFullScreenImg] = useState(null)\n\n  const handleShowEntryInfo = useCallback(\n    entryInfo => setEntryToShow(entryInfo),\n    []\n  )\n\n  const entries = logEntries => {\n    const entriesToShow = logEntries.map(entry => (\n      <li key={entry._id}>\n        {entry.title}\n        <button onClick={() => handleShowEntryInfo(entry)}>Info</button>{' '}\n      </li>\n    ))\n    return entriesToShow\n  }\n\n  return (\n    <div className={'account-page'}>\n      <div className='locations'>\n        <h4>Locations</h4>\n        <ul>{logEntries ? entries(logEntries) : null}</ul>\n      </div>\n      <div className='account-info'>\n        <div className='entry-info'>\n          {entryToShow ? (\n            <EntryDetail\n              setFullScreenImg={setFullScreenImg}\n              entry={entryToShow}\n              setEntryToShow={setEntryToShow}\n              logEntries={logEntries}\n              setLogEntries={setLogEntries}\n              setShowFullScreenImg={setShowFullScreenImg}\n            />\n          ) : (\n            <h4>Select a location</h4>\n          )}\n        </div>\n      </div>\n      <div\n        className={ShowfullScreenImg ? `full-screen-img-container` : `show`}\n        onClick={() => setShowFullScreenImg(false)}\n      >\n        <img width='80%' height='80%' src={fullScreenImg} alt='prueba' />\n      </div>\n    </div>\n  )\n}\n\nconst EntryDetail = ({\n  entry,\n  setLogEntries,\n  logEntries,\n  setEntryToShow,\n  setFullScreenImg,\n  setShowFullScreenImg\n}) => {\n  return (\n    <div className={'card-container'}>\n      <h3 className={'location-title'}>{entry.title}</h3>\n      <div className='location-image'>\n        {entry.image ? (\n          <img\n            onClick={() => {\n              setFullScreenImg(entry.image)\n              setShowFullScreenImg(true)\n            }}\n            height='50%'\n            width='50%'\n            src={entry.image}\n            alt={entry.title}\n          />\n        ) : <small>No image</small> }\n      </div>\n      <div className='info-container'>\n        <div className='latirude'>\n          <em>Latitude:</em>\n          {entry.latitude}\n        </div>\n        <div className='longitude'>\n          <em>Longitude:</em>\n          {entry.longitude}\n        </div>\n\n        <div className='coments'>{entry.comment}</div>\n      </div>\n\n      <button\n        onClick={() => {\n          if (window.confirm(`Are you sure of deleting (${entry.title})`)) {\n            deleteLog(entry._id)\n              .then(() => {\n                setEntryToShow(null)\n                setLogEntries(logEntries.filter(item => item._id !== entry._id))\n              })\n              .catch(err => {\n                setLogEntries(logEntries.filter(item => item._id !== entry._id))\n                setEntryToShow(null)\n                console.log(err)\n              })\n          }\n          return\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  )\n}\n\nexport default AccountPage\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\n\nconst LoginPage = ({ isLogged, setIsLogged }) => {\n  const { register, handleSubmit } = useForm()\n  const [error, setError] = useState('')\n\n  const onSubmit = async data => {\n    console.log(data)\n    // setError on an error\n    setError('Here will be the error message')\n  }\n\n  return (\n    <div className={'account-page'}>\n      {isLogged ? (\n        <Redirect to={{ pathname: '/' }} />\n      ) : (\n        <Redirect to={{ pathname: '/login' }} />\n      )}\n\n      <p>Login Page</p>\n\n      <div className='loggin-container'>\n        <form onSubmit={handleSubmit(onSubmit)} className='entry-form'>\n          {error ? <h3 className='error'>{error}</h3> : null}\n          <label htmlFor='username'>Username or Email</label>\n          <input name='username' required ref={register} id='username' />\n\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            name='password'\n            required\n            ref={register}\n            id='password'\n          />\n          <br />\n          <br />\n          <br />\n          <button type='submit'>Login with database</button>\n          <button onClick={() => setIsLogged(true)}>Login test</button>\n        </form>\n\n        <button >Register</button>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React, { useEffect, useState } from 'react'\nimport { Route } from 'react-router-dom'\nimport './App.css'\nimport { listLogs } from './API'\nimport Nav from './compoments/Nav'\nimport MapComponent from './compoments/MapComponent'\nimport ProtectedRoute from './compoments/ProtectedRoute'\nimport AccountPage from './compoments/AccountPage'\nimport LoginPage from './compoments/LoginPage'\n\n\nfunction App () {\n  const [logEntries, setLogEntries] = useState([])\n  const [isLogged, setIsLogged] = useState(true)\n  const [addEntryLocation, setAddEntryLocation] = useState(null)\n  const [viewport, setViewport] = useState({\n    width: '100%',\n    height: '100%',\n    latitude: 18.5073011,\n    longitude: -69.858715,\n    zoom: 10\n  })\n\n  useEffect(() => {\n// changue in prod (!)\n    if (isLogged) {\n      getEntries()\n    } else {\n      console.log('not logged');\n      setLogEntries([])\n      return\n    }\n  }, [isLogged])\n\n  const getEntries = async () => {\n    const logs = await listLogs()\n    setLogEntries(logs)\n  }\n\n  const showAddMarkerPopUp = e => {\n    const [longitude, latitude] = e.lngLat\n\n    setAddEntryLocation({\n      latitude,\n      longitude\n    })\n  }\n  return (\n    <div className='App'>\n      <Nav isLogged={isLogged} setIsLogged={setIsLogged} />\n      <Route exact path='/'>\n        <MapComponent\n          viewport={viewport}\n          getEntries={getEntries}\n          setAddEntryLocation={setAddEntryLocation}\n          showAddMarkerPopUp={showAddMarkerPopUp}\n          setViewport={setViewport}\n          logEntries={logEntries}\n          addEntryLocation={addEntryLocation}\n        />\n      </Route>\n\n      <Route exact path='/login'>\n        <LoginPage isLogged={isLogged} setIsLogged={setIsLogged} />\n      </Route>\n\n      <ProtectedRoute\n        exact\n        path={'/account/'}\n        prueva={'prueva billy'}\n        isLogged={isLogged}\n        logEntries={logEntries}\n        component={AccountPage}\n        setLogEntries={setLogEntries}\n      />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}